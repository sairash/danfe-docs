import{_ as a,c as n,a3 as l,o as p}from"./chunks/framework.ohJJpums.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"language/reusable/vblock.md","filePath":"language/reusable/vblock.md"}'),o={name:"language/reusable/vblock.md"};function e(t,s,F,c,r,i){return p(),n("div",null,s[0]||(s[0]=[l(`<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-N6M4c" id="tab-GkZsDLt" checked><label data-title="Engllish" for="tab-GkZsDLt">Engllish</label><input type="radio" name="group-N6M4c" id="tab-G1UwYnP"><label data-title="Nepali" for="tab-G1UwYnP">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#F0F3F6;">time </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> v</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    //</span><span style="color:#F0F3F6;"> V code goes here</span></span>
<span class="line"><span style="color:#FF9492;">    import</span><span style="color:#F0F3F6;"> time</span></span>
<span class="line"><span style="color:#FF9492;">    return(</span><span style="color:#F0F3F6;">time.now</span><span style="color:#FF9492;">())</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#F0F3F6;">} </span><span style="color:#FF9492;">endv</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">function</span><span style="color:#DBB7FF;"> get_current_time_nano</span><span style="color:#FF9492;">()</span><span style="color:#F0F3F6;">{</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#FF9492;"> v</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">        import</span><span style="color:#F0F3F6;"> time</span></span>
<span class="line"><span style="color:#FF9492;">        return(</span><span style="color:#F0F3F6;">time.now</span><span style="color:#FF9492;">()</span><span style="color:#91CBFF;">.unix_nano</span><span style="color:#FF9492;">())</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">endv</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">time_in_int </span><span style="color:#FF9492;">=</span><span style="color:#DBB7FF;"> get_current_time_nano</span><span style="color:#FF9492;">()</span></span>
<span class="line"></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#F0F3F6;">samaya </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> v</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    //</span><span style="color:#F0F3F6;"> V code goes here</span></span>
<span class="line"><span style="color:#FF9492;">    import</span><span style="color:#F0F3F6;"> time</span></span>
<span class="line"><span style="color:#FF9492;">    return(</span><span style="color:#F0F3F6;">time.now</span><span style="color:#FF9492;">())</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#F0F3F6;">} </span><span style="color:#FF9492;">endv</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">function</span><span style="color:#DBB7FF;"> get_current_time_nano</span><span style="color:#FF9492;">()</span><span style="color:#F0F3F6;">{</span></span>
<span class="line"><span style="color:#FF9492;">    pathau</span><span style="color:#FF9492;"> v</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">        import</span><span style="color:#F0F3F6;"> time</span></span>
<span class="line"><span style="color:#FF9492;">        return(</span><span style="color:#F0F3F6;">time.now</span><span style="color:#FF9492;">()</span><span style="color:#91CBFF;">.unix_nano</span><span style="color:#FF9492;">())</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">endv</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">samaya_in_int </span><span style="color:#FF9492;">=</span><span style="color:#DBB7FF;"> get_current_time_nano</span><span style="color:#FF9492;">()</span></span>
<span class="line"></span></code></pre></div></div></div><p>Now let&#39;s print the <code>identifiers</code> and check it&#39;s type</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dLEkf" id="tab-Sjql2VK" checked><label data-title="Engllish" for="tab-Sjql2VK">Engllish</label><input type="radio" name="group-dLEkf" id="tab-VTFdwv-"><label data-title="Nepali" for="tab-VTFdwv-">Nepali</label></div><div class="blocks"><div class="language-danfe vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#FF9492;">println(</span><span style="color:#ADDCFF;">&quot;%i{time} &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">typeof</span><span style="color:#FF9492;">(</span><span style="color:#F0F3F6;">time</span><span style="color:#FF9492;">))</span></span>
<span class="line"><span style="color:#FF9492;">println(</span><span style="color:#ADDCFF;">&quot;%i{time_in_int} &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">typeof</span><span style="color:#FF9492;">(</span><span style="color:#F0F3F6;">time_in_int</span><span style="color:#FF9492;">))</span></span></code></pre></div><div class="language-danfe vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">danfe</span><pre class="shiki github-dark-high-contrast" style="background-color:#0a0c10;color:#f0f3f6;" tabindex="0"><code><span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#FF9492;">(</span><span style="color:#ADDCFF;">&quot;%i{time} &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">prakar</span><span style="color:#FF9492;">(</span><span style="color:#F0F3F6;">samaya</span><span style="color:#FF9492;">))</span></span>
<span class="line"><span style="color:#DBB7FF;">dekhauln</span><span style="color:#FF9492;">(</span><span style="color:#ADDCFF;">&quot;%i{time_in_int} &quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">prakar</span><span style="color:#FF9492;">(</span><span style="color:#F0F3F6;">samaya_in_int</span><span style="color:#FF9492;">))</span></span></code></pre></div></div></div>`,3)]))}const u=a(o,[["render",e]]);export{d as __pageData,u as default};
